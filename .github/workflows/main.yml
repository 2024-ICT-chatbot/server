name: CI/CD Pipeline without Docker

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-dev

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          ssh -i private_key -o StrictHostKeyChecking=accept-new ${USER}@${HOST} '
            # Install Python 3.12
            sudo add-apt-repository ppa:deadsnakes/ppa -y
            sudo apt-get update
            sudo apt-get install python3.12 python3.12-venv python3.12-dev -y
            
            # Set Python 3.12 as default
            sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1
            sudo update-alternatives --set python3 /usr/bin/python3.12
            
            # Update pip
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            python3.12 get-pip.py
            rm get-pip.py
            
            # Install Poetry
            curl -sSL https://install.python-poetry.org | python3.12 -
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
            source ~/.bashrc
            
            # Create project directory
            mkdir -p ~/ict
          '

          # Copy project files to EC2
          scp -i private_key -o StrictHostKeyChecking=accept-new -r ./* ${USER}@${HOST}:~/ict/

          ssh -i private_key -o StrictHostKeyChecking=accept-new ${USER}@${HOST} '
            cd ~/ict
            
            # Install project dependencies
            poetry env use python3.12
            poetry install --no-dev
            
            # Setup systemd service
            sudo tee /etc/systemd/system/ict.service > /dev/null <<EOT
            [Unit]
            Description=ICT FastAPI Application
            After=network.target

            [Service]
            User=$USER
            WorkingDirectory=/home/$USER/ict
            ExecStart=$HOME/.local/bin/poetry run uvicorn main:app --host 0.0.0.0 --port 8000
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOT
            
            # Reload systemd, enable and start the service
            sudo systemctl daemon-reload
            sudo systemctl enable ict
            sudo systemctl restart ict
            
            echo "ICT application deployed and started"
          '

      - name: Clear cache
        if: failure()
        run: |
          rm -rf ~/.cache/pypoetry
          echo "Cache cleared due to job failure"
