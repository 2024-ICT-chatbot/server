name: CI/CD Pipeline without Docker

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-dev

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          scp -i private_key -o StrictHostKeyChecking=accept-new -r ./* ${USER}@${HOST}:~/app
          ssh -i private_key -o StrictHostKeyChecking=accept-new ${USER}@${HOST} '
            cd ~/app
            pip install poetry
            poetry config virtualenvs.create false
            poetry install --no-dev
            sudo tee /etc/systemd/system/myapp.service > /dev/null <<EOT
            [Unit]
            Description=My FastAPI Application
            After=network.target

            [Service]
            User=$USER
            WorkingDirectory=/home/$USER/app
            ExecStart=$(which poetry) run uvicorn main:app --host 0.0.0.0 --port 8000
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOT
            sudo systemctl daemon-reload
            sudo systemctl enable myapp
            sudo systemctl restart myapp
            echo "Application deployed and started"
          '

      - name: Clear cache
        if: failure()
        run: |
          rm -rf ~/.cache/pypoetry
          echo "Cache cleared due to job failure"
